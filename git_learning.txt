一、基本命令
    1.提交修改文件：
        git add git_learning.text
        git commit -m “I'm modifying this file”
        # 如果没有add到stage里，就不会将文件加入到commit里
    2.查看工作区的状态：
        git status
    3.查看修改前后的差异：
        git diff
    4.查看commit的历史记录：
        git log
        可以加上参数 --pretty=oneline，只显示上次commit
        git log --pretty=oneline
    5.退回前一个commit版本：
        git reset --hard HEAD^
        HEAD指向的版本就是当前的版本，前两个版本是HEAD^^,前100个版本是HEAD~100
        ⭐如果你没commit当前的内容，就不要回退，否则就不能回到当前版本！！
        1）撤回回退的状态
            git reset --hard 1094a
            后边的数字是commit的版本号（没必要写全），代表可以变为commit序号为1094a....的那个版本
            注：Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD从指向当前版本变为指向另一版本。
    6.记录每一次命令：
        git reflog
        根据这个命令可以找到commit时的版本号，也就能回到任意一个已知版本号的版本。
    7.查看工作区【当前】和版本库里最新版的区别：
        git diff HEAD -- git_learning.txt
    8.返回这次修改前的状态：
        git checkout -- git_learning.txt
        如果文件被放入stage里，则变为stage里的样子，如果还没放入stage里，则变为原来的样子。
        git reset HEAD git_learning.txt
        如果放入暂存区stage里了，这条命令可以把暂存区的修改撤销（unstage）掉，HEAD表示commit的最新版本
    9.删除一个文件 test.txt
        git rm test.txt
        # 把目录下的test.txt文件删除并增加到缓存区stage里
        git commit -m "remove test.txt"
    10.把本地库的分支main推送到远程库origin上：
        git push -u origin main
        # 加 -u 是把本地的main分支和远程的main分支关联起来，后面只需要执行下面命令就可以把本地提交同步到远程了
        git push origin main
二、基础知识
    1.工作区有一个隐藏目录.git，是Git的版本库。
        Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。
        ⭐文件add之后，会存入stage暂存区里，再commit后才会存入master分支里。
        如果把文件add进暂存区stage后再修改，提交，那么提交的这一版不包括add之后的的修改。
    2.远程仓库  
        0）在GitHub上上传本地SSH的公匙（id_rsa.pub文件中的内容）。
        1）在github上创建一个新仓库learn_git后，使用命令： 就将本地关联到github上的远程仓库了
            $ git remote add origin git@github.com:BraveAndWarm/learn_git.git
            添加关联后，远程库的名字就是origin。
        2）